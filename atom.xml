<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[yeltrab]]></title>
  <link href="http://wbartley.github.io/atom.xml" rel="self"/>
  <link href="http://wbartley.github.io/"/>
  <updated>2013-12-11T16:49:47-08:00</updated>
  <id>http://wbartley.github.io/</id>
  <author>
    <name><![CDATA[wbartley]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Be...]]></title>
    <link href="http://wbartley.github.io/blog/2013/11/02/team/"/>
    <updated>2013-11-02T16:12:00-07:00</updated>
    <id>http://wbartley.github.io/blog/2013/11/02/team</id>
    <content type="html"><![CDATA[<p>A colleague of mine walks all new team members through these expectations:</p>

<pre><code>Be...
    Positive
    Helpful
    Humble
    Curious
    Urgent
    Proactive
    Balanced
</code></pre>

<p>Words to live by.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple Yet Amazing Bottle Opener]]></title>
    <link href="http://wbartley.github.io/blog/2013/11/02/bottle-opener/"/>
    <updated>2013-11-02T16:12:00-07:00</updated>
    <id>http://wbartley.github.io/blog/2013/11/02/bottle-opener</id>
    <content type="html"><![CDATA[<p>To kickoff my posts around design (good or bad), I thought I would start with a simple, yet amazing bottle opener by <a href="http://www.brendanravenhill.com/bottle-opener/">Brendan Ravenhill</a>.</p>

<p>As he describes it, &ldquo;A simple tool of great utility. One magnet captures the bottle cap; one holds opener to the fridge.&rdquo;</p>

<p>See it in action:</p>

<div class="embed-video-container"><iframe src="http://www.youtube.com/embed/7sqhcfncoOU "></iframe></div>


<p>Trust me, you want one of these especially at your next party.</p>

<p>Or if you are feeling handy you can always make your own:
<a href="http://www.artofmanliness.com/2012/09/20/how-to-make-a-handsome-and-handy-wooden-bottle-opener/">How to Make a Handsome and Handy Wooden Bottle Opener</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteor &amp; Handlebars Template Helpers]]></title>
    <link href="http://wbartley.github.io/blog/2013/08/22/meteor-and-handlebars-template-helpers/"/>
    <updated>2013-08-22T18:34:00-07:00</updated>
    <id>http://wbartley.github.io/blog/2013/08/22/meteor-and-handlebars-template-helpers</id>
    <content type="html"><![CDATA[<p>OK &ndash; I don&rsquo;t know if it was the Octopress theme I chose or what, but it was driving me crazy to show Meteor Handlebars code snippets.</p>

<p>Finally I found the solution at <a href="http://stackoverflow.com/questions/15786144/how-to-escape-in-markdown-on-octopress">How to escape { in markdown on Octopress?</a>.</p>

<p>On to template helpers&hellip;</p>

<p>Let&rsquo;s say you only want to show a table of steps per day if you have logged any steps. In Meteor to do handlebars conditionals you use template helpers.</p>

<p>First create the template helper:</p>

<ul>
<li>Line 1: <code>steps</code> references the name of the template; <code>hasSteps</code> is the helper.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">Template</span><span class="p">.</span><span class="nx">steps</span><span class="p">.</span><span class="nx">hasSteps</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">ActivitiesSteps</span><span class="p">.</span><span class="nx">find</span><span class="p">().</span><span class="nx">count</span><span class="p">()</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then in the template put the conditional as in line 2 below:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;template</span> <span class="na">name=</span><span class="s">&quot;steps&quot;</span><span class="nt">&gt;</span>       
</span><span class='line'>  {{#if hasSteps}}
</span><span class='line'>      {{&gt;activitiesStepsTable}}
</span><span class='line'>  {{/if}}
</span><span class='line'><span class="nt">&lt;/template&gt;</span>
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteor &amp; Fitbit API - Part Two]]></title>
    <link href="http://wbartley.github.io/blog/2013/08/20/meteor-and-fitbit-api-2/"/>
    <updated>2013-08-20T20:51:00-07:00</updated>
    <id>http://wbartley.github.io/blog/2013/08/20/meteor-and-fitbit-api-2</id>
    <content type="html"><![CDATA[<p>This is the second part of a two-part series walking thru the steps I took to create the Fitbit oAuth &amp; Meteor Account package and the Meteor-Fitbit-API Wrapper package.</p>

<p>Part one is <a href="http://wbartley.github.io/blog/2013/08/19/meteor-and-fitbit-api/">here</a>. To run the example in <a href="#step4">Step 4</a> below you need to have a Fitbit account, create a Fitbit app and install Meteorite.</p>

<!-- more -->


<h2>Step 1: Meteor Fitbit API</h2>

<p>Having the ability to log in via Fitbit is great, but what about getting activity data from Fitbit? To do that I modified the <a href="https://github.com/Sewdn/meteor-twitter-api">Meteor&rsquo;s Twitter API</a> package.</p>

<p>The end result is the <a href="https://github.com/wbartley/meteor-fitbit-api">Meteor Fitbit API Package</a>.</p>

<p>There were a couple of critical adjustments that need to be made to the package.js file:</p>

<ul>
<li>Line 5 is necessary because Fitbit relies on oAuth1</li>
<li>Line 7 is necessary to work with Meteor 0.6.5</li>
</ul>


<figure class='code'><figcaption><span>package.js</span><a href='https://github.com/wbartley/meteor-fitbit-api/blob/master/package.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Package</span><span class="p">.</span><span class="nx">on_use</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">api</span><span class="p">,</span> <span class="nx">where</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="nx">api</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;oauth1&#39;</span><span class="p">,</span> <span class="p">[</span><span class="s1">&#39;client&#39;</span><span class="p">,</span> <span class="s1">&#39;server&#39;</span><span class="p">]);</span>
</span><span class='line'>  <span class="nx">api</span><span class="p">.</span><span class="nx">add_files</span><span class="p">([</span><span class="s1">&#39;lib/fitbit.js&#39;</span><span class="p">],</span> <span class="s1">&#39;server&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">api</span><span class="p">.</span><span class="kr">export</span> <span class="o">&amp;&amp;</span> <span class="nx">api</span><span class="p">.</span><span class="kr">export</span><span class="p">(</span><span class="s1">&#39;Fitbit&#39;</span><span class="p">,</span> <span class="s1">&#39;server&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="p">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>Within lib/fitbit.js I added a couple of endpoints for testing:</p>

<ul>
<li>Line 3 userProfile is to get the user profile</li>
<li>Line 7 getSteps is to get the last 7 days of steps</li>
</ul>


<figure class='code'><figcaption><span>fitbit.js</span><a href='https://github.com/wbartley/meteor-fitbit-api/blob/master/lib/fitbit.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Fitbit</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">userProfile</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;user/-/profile.json&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Fitbit</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getSteps</span> <span class="o">=</span> <span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;user/-/activities/steps/date/today/7d.json&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Step 3: Meteorite and Atmosphere</h2>

<p>As in part one of this series, by following the directions <a href="https://atmosphere.meteor.com/wtf/package">Building a smart package?</a> I created a smart.json file.</p>

<p>To publish you run the command</p>

<pre><code>$ mrt release [path]
</code></pre>

<h2><a name="step4"></a>Step 4: Go for a Spin</h2>

<p>To test it out:</p>

<pre><code>$ git clone https://github.com/wbartley/fitbit_test.git
$ cd fitbit_test
$ meteor add bootstrap
$ meteor add accounts-ui
$ mrt add accounts-fitbit
$ mrt add fitbit-api
</code></pre>

<p>Prior to starting meteor, open server/config.js and insert your service and consumerKey:</p>

<figure class='code'><figcaption><span>config.js</span><a href='https://github.com/wbartley/fitbit_test/server/config.js'>link</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">Accounts</span><span class="p">.</span><span class="nx">loginServiceConfiguration</span><span class="p">.</span><span class="nx">insert</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">service</span><span class="o">:</span> <span class="s2">&quot;fitbit&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">consumerKey</span><span class="o">:</span> <span class="s2">&quot;your key&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">secret</span><span class="o">:</span> <span class="s2">&quot;your secret&quot;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Start meteor, open <a href="http://localhost:3000/">http://localhost:3000/</a> and follow these steps:</p>

<ol>
<li>Click &ldquo;Sign in with Fitbit&rdquo;.</li>
<li>If necessary enter your Fitbit account Email and Password and click &ldquo;Allow&rdquo;.</li>
<li>You should see your Fitbit login name, your full name, avatar picture (assuming you have one) and a &ldquo;Sign Out&rdquo; button.</li>
<li>Click &ldquo;Get Steps&rdquo;.</li>
</ol>


<p>You should see a table with the last seven days of Fitbit step activities.</p>

<h2>Next&hellip;</h2>

<p>Now the fun begins. Explore the <a href="https://wiki.fitbit.com/display/API/API+Explorer">Discover the Fitbit API</a>  tool provided by Apigee (@apigee) and add some additional endpoints or follow this approach to port additional API packages and add them to <a href="https://atmosphere.meteor.com/wtf/app">Atmosphere</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Meteor &amp; Fitbit API - Part One]]></title>
    <link href="http://wbartley.github.io/blog/2013/08/19/meteor-and-fitbit-api/"/>
    <updated>2013-08-19T20:51:00-07:00</updated>
    <id>http://wbartley.github.io/blog/2013/08/19/meteor-and-fitbit-api</id>
    <content type="html"><![CDATA[<p>After taking <a href="http://www.meteor.com/">Meteor</a> for a spin <strong>(AWESOME)</strong> and having just recently bought a Fitbit Flex I wanted a way to get my Fitbit data into Meteor apps.</p>

<p>In this two-part series I&rsquo;ll walk thru the steps I took to create the Fitbit oAuth &amp; Meteor Account package and then the Meteor-Fitbit-API Wrapper package. I&rsquo;ll also show how to use <a href="http://oortcloud.github.io/meteorite/">Meteorite</a> to add and install smart packages from <a href="https://atmosphere.meteor.com/wtf/app">Atmosphere</a>. The hope is that others follow this approach and port additional API packages.</p>

<!-- more -->


<h2>Step 1: Fitbit oAuth</h2>

<p>Sign up for an account and create an app at Fitbit. The callback URL needs to be:</p>

<pre><code>[your site url]/_oauth/fitbit?close 
</code></pre>

<p>It is ok to use localhost for your dev environment. For meteor apps the default port is 3000:</p>

<pre><code>https://localhost:3000/_oauth/fitbit?close
</code></pre>

<p>Here&rsquo;s the <a href="https://wiki.fitbit.com/display/API/Fitbit+API">Fibit API documentation</a> for reference. Fitbit offers a <a href="https://wiki.fitbit.com/display/API/API+Explorer">Discover the Fitbit API</a> tool provided by Apigee (@apigee) that was a ton of help.</p>

<h2>Step 2: Meteor Accounts &amp; oAuth</h2>

<p>Meteor allows developers to quickly add log in functionality via Twitter, Github, etc. by running the commands:</p>

<pre><code>$ meteor add accounts-twitter
$ meteor add accounts-github
</code></pre>

<p>so I decided that was the only way to go.</p>

<p>Because Fitbit uses oAuth1 I modified the <a href="https://github.com/meteor/meteor/tree/master/packages/accounts-twitter">Meteor Twitter Auth</a> and <a href="https://github.com/meteor/meteor/tree/master/packages/twitter">Meteor Twitter</a> packages. The end results are the <a href="https://github.com/wbartley/accounts-fitbit">Fitbit OAuth for Meteor</a> and <a href="https://github.com/wbartley/fitbit">Fitbit</a> packages.</p>

<p>A few code snippets to note from the fitbit/fitbit_server.js file:</p>

<ul>
<li>Lines 2 &ndash; 5 are required URLs for request/access tokens and to authorize/authenticate.</li>
<li>Line 11 is the endpoint for getting profile data.</li>
<li>Lines 15 &ndash; 16 and 24 &ndash; 25 are changes to the original code to load the entire Fitbit user profile on account creation. I didn&rsquo;t have to do that, but I wanted to load my avatar picture and other details.</li>
</ul>


<figure class='code'><figcaption><span>fitbit_server.js</span><a href='https://github.com/wbartley/fitbit/blob/master/fitbit_server.js'>fitbit_server.js</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">urls</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">requestToken</span><span class="o">:</span> <span class="s2">&quot;https://api.fitbit.com/oauth/request_token&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">authorize</span><span class="o">:</span> <span class="s2">&quot;https://www.fitbit.com/oauth/authorize&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">accessToken</span><span class="o">:</span> <span class="s2">&quot;https://api.fitbit.com/oauth/access_token&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">authenticate</span><span class="o">:</span> <span class="s2">&quot;https://www.fitbit.com/oauth/authenticate&quot;</span>
</span><span class='line'><span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>
</span><span class='line'><span class="nx">Oauth</span><span class="p">.</span><span class="nx">registerService</span><span class="p">(</span><span class="s1">&#39;fitbit&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="nx">urls</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">oauthBinding</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">identity</span> <span class="o">=</span> <span class="nx">oauthBinding</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;https://api.fitbit.com/1/user/-/profile.json&#39;</span><span class="p">).</span><span class="nx">data</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="p">...</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">profile</span> <span class="o">=</span> <span class="nx">identity</span><span class="p">.</span><span class="nx">user</span><span class="p">;</span> <span class="c1">//add all fitbit profile data</span>
</span><span class='line'>  <span class="nx">profile</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">identity</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">displayName</span><span class="p">;</span> <span class="c1">//add name to see in default login buttons</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// include helpful fields from Fitbit</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">fields</span> <span class="o">=</span> <span class="nx">_</span><span class="p">.</span><span class="nx">pick</span><span class="p">(</span><span class="nx">identity</span><span class="p">,</span> <span class="nx">Fitbit</span><span class="p">.</span><span class="nx">whitelistedFields</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">_</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">serviceData</span><span class="p">,</span> <span class="nx">fields</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">serviceData</span><span class="o">:</span> <span class="nx">serviceData</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">profile</span><span class="o">:</span> <span class="nx">profile</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>It was also important to update the fitbit/fitbit_configure.html file with the information from Step 1 above:</p>

<figure class='code'><figcaption><span>fitbit_configure.html</span><a href='https://github.com/wbartley/fitbit/blob/master/fitbit_configure.html'>fitbit_configure.html</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;template</span> <span class="na">name=</span><span class="s">&quot;configureLoginServiceDialogForFitbit&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;p&gt;</span>
</span><span class='line'>    First, you<span class="ni">&amp;#39;</span>ll need to get a Fitbit Consumer Key. Follow these steps:
</span><span class='line'>  <span class="nt">&lt;/p&gt;</span>
</span><span class='line'>  <span class="nt">&lt;ol&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li&gt;</span>
</span><span class='line'>      Visit <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">&quot;https://dev.fitbit.com/apps/new&quot;</span> <span class="na">target=</span><span class="s">&quot;blank&quot;</span><span class="nt">&gt;</span>https://dev.fitbit.com/apps/new<span class="nt">&lt;/a&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li&gt;</span>
</span><span class='line'>      Set Main URL to to: <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;url&quot;</span><span class="nt">&gt;</span><span class="nt">&lt;/span&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>    <span class="nt">&lt;li&gt;</span>
</span><span class='line'>      Set Callback URL to: <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">&quot;url&quot;</span><span class="nt">&gt;</span>_oauth/fitbit?close<span class="nt">&lt;/span&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/li&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/ol&gt;</span>
</span><span class='line'><span class="nt">&lt;/template&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Step 3: Meteorite and Atmosphere</h2>

<p>To add and install smart packages from <a href="https://atmosphere.meteor.com/wtf/app">Atmosphere</a> I needed to install  <a href="http://oortcloud.github.io/meteorite/">Meteorite</a>.</p>

<p>A critical piece was making sure that the Meteor and Meteorite smart packages were setup correctly. Meteor uses packages.js and Meteorite uses smart.json.</p>

<p>For me the [path] was the current package directory.</p>

<p>Note: each time you publish you need to increment the smart.json version, add/commit to your git repo and then run the mrt release command.</p>

<h2>Step 4: Go for a Spin</h2>

<p>To test it out create a meteor app and add the packages. For example:</p>

<pre><code>$ meteor create fitbit_test 
$ cd fitbit_test
$ meteor add accounts-ui
$ mtr add accounts-fitbit
</code></pre>

<p>Then open fitbit_test.html and replace <strong>{{> hello}}</strong> with <strong>{{loginButtons}}</strong> .</p>

<p>Start Meteor and open <a href="http://localhost:3000">http://localhost:3000</a>:</p>

<pre><code>$ meteor  
</code></pre>

<p>Finally follow these steps:</p>

<ol>
<li>Click &ldquo;Configure Fitbit Login&rdquo;. Fill in the consumer_key and consumer_secret details from when you created your Fitbit app in Step 1.</li>
<li>Click &ldquo;Save Configuration&rdquo;.</li>
<li>Click &ldquo;Sign in with Fitbit&rdquo;.</li>
<li>Enter your Fitbit account Email and Password and click &ldquo;Allow&rdquo;.</li>
</ol>


<p>If you see your Fitbit login name and a &ldquo;Sign Out&rdquo; button &ndash; Success! If you want to see your avatar picture (assuming you have one) then add the following to fitbit_test.html:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">&quot;&quot;</span> <span class="na">class=</span><span class="s">&quot;img-rounded&quot;</span> <span class="na">style=</span><span class="s">&quot;width:50px&quot;</span> <span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>with the <strong>src=&ldquo;{{currentUser.profile.avatar}}&rdquo;</strong>.</p>

<p>You should then see your avatar picture.</p>

<h2>Next Steps&hellip;</h2>

<p>Now that you can login in and create an account with Fitbit, the next step is to get your activity data from the Fitbit API. That will be covered in part two of this series.</p>
]]></content>
  </entry>
  
</feed>
